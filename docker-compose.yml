version: '3.4'

services:
  ############################
  # Azurite
  ############################
  azurite:
    image: mcr.microsoft.com/azure-storage/azurite
    hostname: azurite
    command: "azurite-queue --queueHost 0.0.0.0 --loose --skipApiVersionCheck -d /tmp/azurite_debug.log"
    ports:
     - "10000:10000"
     - "10001:10001"
    volumes:
     - ./data/azurite:/data

  ####################
  # CosmosDB emulator
  ####################
  cosmosdb:
    container_name: cosmosdb
    image: "mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator"
    tty: true
    restart: always
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
    environment:
      - AZURE_COSMOS_EMULATOR_PARTITION_COUNT=10
      - AZURE_COSMOS_EMULATOR_ENABLE_DATA_PERSISTENCE=true
    ports:
       - "8081:8081"
       - "8900:8900"
       - "8901:8901"
       - "8979:8979"
       - "10250:10250"
       - "10251:10251"
       - "10252:10252"
       - "10253:10253"
       - "10254:10254"
       - "10255:10255"
       - "10256:10256"
       - "10350:10350"
    volumes:
       - vol_cosmos:/data/db

  ############################
  # Redis state store
  ############################
  redis:
    image: "redis:alpine"
    hostname: redisserver
    ports:
      - "6379:6379"

############################
# SignalR emulator service
############################
  signalr:
    image: ${DOCKER_REGISTRY-}signalremulator
    build:
      context: .
      dockerfile: ./LocalEnv/Dockerfile
    ports:
      - 8888:8888
      - 7071:7071
    volumes:
     - ./workspace:/workspace
    environment:
      - ASRS_EMULATOR_PORT=8888
      - ASPNETCORE_URLS=http://+:8888;http://+:7071
      
############################
# Global settings
############################
volumes: 
  vol_cosmos:
  workspace:

